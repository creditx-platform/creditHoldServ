-- Holds
CREATE SEQUENCE CHS_HOLD_SEQ START WITH 1 INCREMENT BY 1 CACHE 1000 NOCYCLE;

CREATE TABLE CHS_HOLDS (
    HOLD_ID        NUMBER(19) PRIMARY KEY,
    TRANSACTION_ID NUMBER(19) NOT NULL,
    ACCOUNT_ID     NUMBER(19) NOT NULL,
    AMOUNT         NUMBER(20,2) NOT NULL,
    STATUS         VARCHAR2(20) NOT NULL CHECK (STATUS IN ('AUTHORIZED','CAPTURED','VOIDED','EXPIRED')),
    CREATED_AT     TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    UPDATED_AT     TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

CREATE OR REPLACE TRIGGER TRG_CHS_HOLDS_UPD
BEFORE UPDATE ON CHS_HOLDS
FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := SYSTIMESTAMP;
END;
/

-- Outbox Events
CREATE SEQUENCE CHS_OUTBOX_SEQ START WITH 1 INCREMENT BY 1 CACHE 1000 NOCYCLE;

CREATE TABLE CHS_OUTBOX_EVENTS (
    EVENT_ID     NUMBER(19) PRIMARY KEY,
    EVENT_TYPE   VARCHAR2(100) NOT NULL,
    AGGREGATE_ID NUMBER(19),
    PAYLOAD      CLOB NOT NULL,
    STATUS       VARCHAR2(20) DEFAULT 'PENDING' NOT NULL CHECK (STATUS IN ('PENDING','PUBLISHED','FAILED')),
    CREATED_AT   TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    PUBLISHED_AT TIMESTAMP
);
